close all;
file = '2024-07-09_20-33-me120';
% 2024-07-09_20-33-me120
% 2024-07-09_20-17-cow
% 2024-07-09_20-25-me99
path = '/Users/Sreela/Documents/School/Stanford/Year3_2/PIEZO2/JND_Study/additionalData/';
data = readmatrix(strcat(path,file, '/raw_', file,'.csv'),'NumHeaderLines',0);


time = data(:,1);
command = data(:,2);
measured = interp1([986, 28],[0, 20],data(:,3));
%commandMM_1p = interp1([47, 139],[0, 20],onePoke(:,3));
%measuredMM_1p = interp1([986, 28],[0, 20],onePoke(:,4));
force = data(:,4);

diff = zeros(size(time, 1)-1, 1);
for i = 1:(size(data,1)-1)
    d = time(i+1,1) - time(i,1);
    diff(i,1) = d;
    %disp(d);
end
Fs = 1000/mean(diff);
fftY = fft(force);
magY = abs(fftY);
magYshift = abs(fftshift(fftY));
L = length(force);
yMax= 500;

P2 = abs(fftY/L);
P1 = P2(1:L/2+1);
P1(2:end-1) = 2*P1(2:end-1);

% frequency spectrum 
figure;
set(gcf,'color','white')
gca(gcf);
plot(Fs/L*(0:(L/2)),P1,"LineWidth",3)
ylim([0,0.5]);
title("Single-Sided Amplitude Spectrum of X(t)", 'FontSize',18)
xlabel("f (Hz)", 'FontSize',18)
ylabel("|P1(f)|", 'FontSize',18)



%filter time
f_filter = 0.4; % 1 Hz

filteredLPF = lowpass(force, f_filter*2/Fs);
filteredLPFr = round(filteredLPF);
w = 10;
coeffWindow = ones(1,w)/w;
filteredAVG = filter(coeffWindow, 1, force);
filteredAVGf = floor(filteredAVG);
filteredMedian = medfilt1(force,10);
filteredMedianf = floor(filteredMedian);


% for LPF, higher than 0.6 or 0.4 there's more noise. below that looks the same
% window of 50 for moving average
figure;
set(gcf,'color','white')
ax = gca(gcf);
%plot(time, force); hold on;
plot(time, force, time, filteredLPFr+5, time, filteredAVGf+10, time, filteredMedianf+15); hold on;
% plot(time, round(lowpass(filteredAVGf, 0.1*2/Fs)) + 20); hold on;

plot(time, round(filter(ones(1,20)/w, 1, filteredLPFr)) + 20); hold on;
% plot(time, round(lowpass(filteredMedianf, 0.1*2/Fs)) + 25); hold on;
% wArr = 20:10:100;
% f_filterArr = 0.6;%1:-.2:.1;%.1:-.02:.02;
% for i = 1:length(f_filterArr)
% %     c = ones(1,i)/i;
% %     f = filter(c, 1, force);
% 
%    f = lowpass(force, f_filterArr(i)*2/Fs);
%    f = filter(coeffWindow, 1, f);
%    %f = round(f);
%    plot(time, f + i*5); hold on;
% end
ylim([240,340]);
%ylim([245,258]);
title("Force vs time", 'FontSize',18)
ylabel("force (raw value)", 'FontSize',18)
xlabel("time (ms)", 'FontSize',18)